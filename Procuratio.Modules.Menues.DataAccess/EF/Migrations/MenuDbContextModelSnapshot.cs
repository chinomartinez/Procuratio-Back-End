// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Procuratio.Modules.Menues.DataAccess;

namespace Procuratio.Modules.Menu.DataAccess.EF.Migrations
{
    [DbContext(typeof(MenuDbContext))]
    partial class MenuDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Menu")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "6.0.0-preview.2.21154.2")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Procuratio.Modules.Menues.Domain.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("ForKitchen")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<short>("ItemStateId")
                        .HasColumnType("smallint");

                    b.Property<int>("MenuCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<decimal?>("PriceInsideRestaurant")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal?>("PriceOutsideRestaurant")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)");

                    b.HasKey("Id");

                    b.HasIndex("ItemStateId");

                    b.HasIndex("MenuCategoryId");

                    b.HasIndex("BranchId", "Name")
                        .IsUnique();

                    b.ToTable("Item");
                });

            modelBuilder.Entity("Procuratio.Modules.Menues.Domain.Entities.MenuCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("MenuCategoryStateId")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuCategoryStateId");

                    b.HasIndex("BranchId", "Name")
                        .IsUnique();

                    b.ToTable("MenuCategory");
                });

            modelBuilder.Entity("Procuratio.Modules.Menues.Domain.Entities.State.ItemState", b =>
                {
                    b.Property<short>("Id")
                        .HasColumnType("smallint");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("ItemState");

                    b.HasData(
                        new
                        {
                            Id = (short)1,
                            StateName = "Disponible"
                        },
                        new
                        {
                            Id = (short)2,
                            StateName = "Eliminado"
                        });
                });

            modelBuilder.Entity("Procuratio.Modules.Menues.Domain.Entities.State.MenuCategoryState", b =>
                {
                    b.Property<short>("Id")
                        .HasColumnType("smallint");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("MenuCategoryState");

                    b.HasData(
                        new
                        {
                            Id = (short)1,
                            StateName = "Disponible"
                        },
                        new
                        {
                            Id = (short)2,
                            StateName = "Eliminado"
                        });
                });

            modelBuilder.Entity("Procuratio.Modules.Menues.Domain.Entities.Item", b =>
                {
                    b.HasOne("Procuratio.Modules.Menues.Domain.Entities.State.ItemState", "ItemState")
                        .WithMany("CollectionNavigationProperty")
                        .HasForeignKey("ItemStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Procuratio.Modules.Menues.Domain.Entities.MenuCategory", "MenuCategory")
                        .WithMany("Items")
                        .HasForeignKey("MenuCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemState");

                    b.Navigation("MenuCategory");
                });

            modelBuilder.Entity("Procuratio.Modules.Menues.Domain.Entities.MenuCategory", b =>
                {
                    b.HasOne("Procuratio.Modules.Menues.Domain.Entities.State.MenuCategoryState", "MenuCategoryState")
                        .WithMany("CollectionNavigationProperty")
                        .HasForeignKey("MenuCategoryStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuCategoryState");
                });

            modelBuilder.Entity("Procuratio.Modules.Menues.Domain.Entities.MenuCategory", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Procuratio.Modules.Menues.Domain.Entities.State.ItemState", b =>
                {
                    b.Navigation("CollectionNavigationProperty");
                });

            modelBuilder.Entity("Procuratio.Modules.Menues.Domain.Entities.State.MenuCategoryState", b =>
                {
                    b.Navigation("CollectionNavigationProperty");
                });
#pragma warning restore 612, 618
        }
    }
}
